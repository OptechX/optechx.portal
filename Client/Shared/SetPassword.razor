@using OptechX.Portal.Shared.Models.User
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthService AuthService
@inject IToastService ToastService
@inject NavigationManager NavigationManager

<PageTitle>OptechX Portal</PageTitle>

<h3>Set New Password</h3>

<p>Input your registered email address below or <a href="register">register</a> for an account.</p>

<EditForm Model="setPasswordRequest" OnValidSubmit="HandleResetRequest">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <!-- Set Password Token -->
    <div class="form-group mb-3">
        <label for="token">Password Reset Token</label>
        <InputText id="token" @bind-Value="setPasswordRequest.PasswordResetToken" class="form-control"></InputText>
        <ValidationMessage For="@(() => setPasswordRequest.PasswordResetToken)" />
    </div>

    <div class="form-group mb-3">
        <label for="password">New Password</label>
        <InputText id="password" @bind-Value="setPasswordRequest.Password" class="form-control"></InputText>
        <ValidationMessage For="@(() => setPasswordRequest.Password)" />
    </div>

    <div class="form-group mb-3">
        <label for="passwordConfirm">Confirm New Password</label>
        <InputText id="passwordConfirm" @bind-Value="setPasswordRequest.ConfirmPassword" class="form-control"></InputText>
        <ValidationMessage For="@(() => setPasswordRequest.ConfirmPassword)" />
    </div>

    <!-- Submit Button -->
    <button type="submit" class="btn btn-primary">Reset Password</button>
</EditForm>

@code {
    private SetPasswordRequest setPasswordRequest = new();

    protected override void OnInitialized()
    {
        var uri = new Uri(NavigationManager.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        var token = query["token"];

        if (!string.IsNullOrEmpty(token))
        {
            setPasswordRequest.PasswordResetToken = token;
        }
    }

    private async void HandleResetRequest()
    {
        ToastService.ShowSuccess("Password reset submitted");
        await Task.Delay(1000);
        ToastService.ShowInfo("Redirecting...");
        await Task.Delay(2000);
        NavigationManager.NavigateTo("/");
    }
}

