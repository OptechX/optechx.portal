@using OptechX.Portal.Shared.Models.User
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthService AuthService
@inject IToastService ToastService
@inject NavigationManager NavigationManager

<PageTitle>OptechX Portal</PageTitle>

<h3>Reset Password</h3>

<p>Please enter your registered email address below to request a password reset.</p>
<p>If you don't have an account yet, you can easily <a href="/register">register for a new account</a>. We're here to help!</p>

<EditForm Model="resetPasswordRequest" OnValidSubmit="HandleResetRequest">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group mb-3">
        <label for="email">Email Address</label>
        <InputText id="email" @bind-Value="resetPasswordRequest.ResetEmailAddress" class="form-control"></InputText>
        <ValidationMessage For="@(() => resetPasswordRequest.ResetEmailAddress)" />
    </div>
    <button type="submit" class="btn btn-primary">Reset Password</button>
</EditForm>

@if (showReceivedMsg)
{
    <p style="margin-top: 10px; background-color: #f7f7f7; color: #333; font-weight: bold; padding: 10px;">
        If you have an account registered, you will receive an email shortly.
    </p>

}

@code {
    private ResetPasswordRequest resetPasswordRequest = new();

    private bool showReceivedMsg = false;

    protected override void OnInitialized()
    {
        var uri = new Uri(NavigationManager.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        var emailAddress = query["email"];

        if (!string.IsNullOrEmpty(emailAddress))
        {
            resetPasswordRequest.ResetEmailAddress = emailAddress;
        }
    }

    private async void HandleResetRequest()
    {
        ToastService.ShowSuccess("Password reset request submitted");
        showReceivedMsg = true;
        await Task.Delay(3000);
        ToastService.ShowInfo("Redirecting...");
        await Task.Delay(2000);
        NavigationManager.NavigateTo("/");
    }
}

