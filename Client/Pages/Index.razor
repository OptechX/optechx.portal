@page "/"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ILocalStorageService LocalStorage



<PageTitle>OptechX Portal</PageTitle>

<AuthorizeView>
    <Authorized>
        <h3>OptechX Portal</h3>
        <h5>@if (!string.IsNullOrEmpty(userEmail)){ @userEmail } Welcome back!  </h5>
        Let's admire your <a href="army">your beloved army</a>
    </Authorized>
    <NotAuthorized>
        <Login />
    </NotAuthorized>
</AuthorizeView>


@code {
    private string userEmail = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var isAuthd = await LocalStorage.GetItemAsync<string>("authToken");
        if (!string.IsNullOrEmpty(isAuthd))
            userEmail = await GetAccountId();
    }

    private async Task<string> GetAccountId()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var accountIdClaim = authenticationState.User.Claims.FirstOrDefault(claim => claim.Type == "AccountId");
        if (!string.IsNullOrEmpty(accountIdClaim?.Value))
        {
            return accountIdClaim!.Value;
        }
        else
        {
            return string.Empty;
        }
    }
}
