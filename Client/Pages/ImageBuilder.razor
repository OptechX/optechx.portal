@page "/imagebuilder"
@using OptechX.Portal.Shared.Models.Engine.ImageBuilds
@using OptechX.Portal.Shared.Models.Engine.Constants
@inject IToastService ToastService
@*@attribute [Authorize]*@

<PageTitle>OptechX Portal</PageTitle>

<h3>Image Builder</h3>

<EditForm Model="imageBuild" OnValidSubmit="HandleSubmitImageBuild">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group mb-3">
        <label for="imageFormat">Image Format</label>
        <InputSelect id="imageFormat" @bind-Value="imageBuild.ImageFormat" class="form-control">
            @foreach (var format in Enum.GetValues(typeof(ImageOutputFormat)))
            {
                <option value="@format">@format</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => imageBuild.ImageFormat)" />
    </div>


</EditForm>

<!--        <InputText id="imageFormat" @bind-Value="userLogin.Email" class="form-control"></InputText>-->

@code {
    private ImageBuild imageBuild = new ImageBuild();
    private bool showSubmitButton;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        showSubmitButton = true;
    }

    private async Task HandleSubmitImageBuild()
    {
        showSubmitButton = false;
        ToastService.ShowInfo("Submitting order");
        //var result = await AuthService.Login(userLogin);
        //if (result.Success)
        //{
        //    ToastService.ShowSuccess("Login successful");
        //    if (!string.IsNullOrEmpty(result?.Data?.JWT))
        //    {
        //        await JSRuntime.InvokeVoidAsync("console.log", result.Data.JWT);
        //        await LocalStorage.SetItemAsync<string>("authToken", result!.Data!.JWT);
        //        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        //    }
        //}
        //else
        //{
        //    ToastService.ShowError("Incorrect email or password");
        //    showSubmitButton = true;
        //}
    }
}
