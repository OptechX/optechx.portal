@page "/test"
@inject IToastService ToastService

<h3>Component1</h3>

@*<div style="height: 200px; overflow-y: auto;" class="mb-3">
        @foreach (string item in Items)
        {
            <div>
                <span style="display: flex; align-items: center;">
                    <input type="checkbox" checked="@SelectedItems.Contains(item)" @onclick="() => ToggleItemSelection(item)" disabled="@IsReadOnly" />
                    <img src="https://raw.githubusercontent.com/OptechX/library.apps.images/main/7-Zip/icon_scaled.png" alt="Item Image" style="height: 1em; margin-right: 0.5em;" />
                    @item
                </span>
            </div>
        }
    </div>*@

@*<div style="height: 200px; overflow-y: auto; border: 1px solid #ccc; border-radius: 5px;" class="mb-3">
    @foreach (string item in Items)
    {
        <div>
            <span style="display: flex; align-items: center;">
                <input type="checkbox" checked="@SelectedItems.Contains(item)" @onclick="() => ToggleItemSelection(item)" disabled="@IsReadOnly" />
                <img src="https://raw.githubusercontent.com/OptechX/library.apps.images/main/7-Zip/icon_scaled.png" alt="Item Image" style="height: 1em; margin-right: 0.5em;" />
                @item
            </span>
        </div>
    }
</div>*@

<div style="height: 200px; overflow-y: auto; border: 1px solid #ccc; border-radius: 5px;" class="mb-3">
    @foreach (string item in Items)
    {
        <div>
            <span style="display: flex; align-items: center; padding-left: 10px; padding-bottom: 3px;">
                <input type="checkbox" checked="@SelectedItems.Contains(item)" @onclick="() => ToggleItemSelection(item)" disabled="@IsReadOnly" />
                <img src="https://raw.githubusercontent.com/OptechX/library.apps.images/main/7-Zip/icon_scaled.png" alt="Item Image" style="height: 1em; margin-right: 0.5em;" />
                @item
            </span>
        </div>
    }
</div>

@*<div style="height: 200px; overflow-y: auto; border: 1px solid #ccc; border-radius: 5px;" class="mb-3">
    @foreach (string item in Items)
    {
        <div>
            <span style="display: flex; align-items: center; padding: 5px;">
                <input type="checkbox" checked="@SelectedItems.Contains(item)" @onclick="() => ToggleItemSelection(item)" disabled="@IsReadOnly" />
                <img src="https://raw.githubusercontent.com/OptechX/library.apps.images/main/7-Zip/icon_scaled.png" alt="Item Image" style="height: 1em; margin-right: 0.5em;" />
                @item
            </span>
        </div>
    }
</div>*@



<button @onclick="RunButtonAsync" class="btn btn-warning mb-3">Run Button</button>

@code {
    public List<string> SelectedItems { get; set; } = new List<string>();

    public List<string> Items { get; set; } = new List<string>
{
        "Item 1",
        "Item 2",
        "Item 3",
        "Item 4",
        "Item 5",
        "Item 6",
        "Item 7",
        "Item 8",
        "Item 9",
        "Item 10",
        "Item 11",
        "Item 12",
        "Item 13",
        "Item 14",
        "Item 15",
        "Item 16",
    };

    public bool IsReadOnly { get; set; } = false;


    private void ToggleItemSelection(string item)
    {
        if (SelectedItems.Contains(item))
        {
            SelectedItems.Remove(item);
        }
        else
        {
            SelectedItems.Add(item);
        }
    }

    private async Task RunButtonAsync()
    {
        IsReadOnly = true; // Disable checkbox list
        StateHasChanged(); // Notify Blazor to re-render the component

        await Task.Run(() =>
        {
            foreach (string i in SelectedItems)
            {
                ToastService.ShowInfo($"App selected: {i}");
            }
        });

        //IsReadOnly = false; // Enable checkbox list after task completion
        //StateHasChanged(); // Notify Blazor to re-render the component
    }
}
