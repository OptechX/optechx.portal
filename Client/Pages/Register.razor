@page "/register"
@inject IUnitService UnitService
@inject ICountryListService CountryListService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<PageTitle>OptechX Portal</PageTitle>

<h3>Register</h3>

@if(UnitService.Units.Count > 0 || CountryListService.Countries.Count > 0)
{
    <EditForm Model="user" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <!-- Email -->
        <div class="form-group mb-3">
            <label for="email" class="required">Email</label>
            <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
            <ValidationMessage For="@(() => user.Email)" />
        </div>
        <!-- Username -->
        <div class="form-group mb-3">
            <label for="username">Username</label>
            <InputText id="username" @bind-Value="user.Username" class="form-control"></InputText>
            <ValidationMessage For="@(() => user.Username)" />
        </div>
        <!-- Password -->
        <div class="form-group mb-3">
            <label for="password" class="required">Password</label>
            <InputText id="password" @bind-Value="user.Password" class="form-control"></InputText>
            <ValidationMessage For="@(() => user.Password)" />
        </div>
        <!-- Confirm Password -->
        <div class="form-group mb-3">
            <label for="confirmPassword">Confirm Password</label>
            <InputText id="password" @bind-Value="user.ConfirmPassword" class="form-control"></InputText>
            <ValidationMessage For="@(() => user.ConfirmPassword)" />
        </div>
        <!-- Start Unit -->
        <div class="form-group mb-3">
            <label for="startUnit">Start Unit</label>
            <InputSelect id="startUnit" @bind-Value="user.StartUnitId" class="form-control">
                @foreach (var unit in UnitService.Units)
                {
                    <option value="@unit.Id">@unit.Title</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => user.StartUnitId)" />
        </div>
        <!-- Bananas -->
        <div class="form-group mb-3">
            <label for="bananas">Bananas</label>
            <InputNumber id="bananas" @bind-Value="user.Bananas" class="form-control"></InputNumber>
            <ValidationMessage For="@(() => user.Bananas)" />
        </div>
        <!-- Country -->
        <div class="form-group mb-3">
            <label for="country">Country</label>
            <InputSelect id="country" @bind-Value="user.Country" class="form-control">
                @foreach (var country in CountryListService.Countries)
                {
                    <option value="@country">@country</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => user.Country)" />
        </div>
        <!-- Accept Terms & Conditions -->
        <div class="form-check mb-3">
            <InputCheckbox id="confirmed" @bind-Value="user.IsConfirmed" class="form-control-input"></InputCheckbox>
            <label for="confirmed" class="form-check-label">I accept Terms &amp; Conditions for OptechX</label>
            <ValidationMessage For="@(() => user.IsConfirmed)" />
        </div>
        <!-- Submit button -->
        <button type="submit" class="btn btn-primary">Register</button>
    </EditForm>
}
else
{
    <p class="centered-text">Loading form...</p>
}

@code {
    UserRegister user = new UserRegister();

    protected override async Task OnInitializedAsync()
    {
        await UnitService.LoadUnitsAsync();
        await CountryListService.LoadCountryListAsync();
    }

    void HandleRegistration()
    {
        JSRuntime.InvokeVoidAsync("console.log", user);
        NavigationManager.NavigateTo("login");
    }
}

